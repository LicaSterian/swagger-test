// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateBookHandlerFunc turns a function with the right signature into a update book handler
type UpdateBookHandlerFunc func(UpdateBookParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateBookHandlerFunc) Handle(params UpdateBookParams) middleware.Responder {
	return fn(params)
}

// UpdateBookHandler interface for that can handle valid update book params
type UpdateBookHandler interface {
	Handle(UpdateBookParams) middleware.Responder
}

// NewUpdateBook creates a new http.Handler for the update book operation
func NewUpdateBook(ctx *middleware.Context, handler UpdateBookHandler) *UpdateBook {
	return &UpdateBook{Context: ctx, Handler: handler}
}

/*UpdateBook swagger:route PUT /book/{id} book updateBook

update a book by bookId

*/
type UpdateBook struct {
	Context *middleware.Context
	Handler UpdateBookHandler
}

func (o *UpdateBook) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateBookParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
